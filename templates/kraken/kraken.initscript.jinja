#! /bin/sh
#
## File managed by fabric, don't edit directly
#

### BEGIN INIT INFO
# Provides:          kraken_{{instance}}
# Required-Start:    $all
# Required-Stop:     $all
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts kraken_{{instance}}
# Description:       starts kraken_{{instance}} using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
NAME=kraken_{{instance}}
PIDFILE={{kraken_base_conf}}/{{instance}}/kraken.pid
DIR={{kraken_base_conf}}/{{instance}}/
EXECUTABLE=kraken
DAEMON={{kraken_base_conf}}/{{instance}}/kraken
DAEMON_OPTS=""
USER=www-data
GROUP=www-data
test -x $DAEMON || exit 1

set -e

funcstatus()
{
    if [ -f $PIDFILE ]
    then
        PID=`cat $PIDFILE`
        if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]
        then
            STATUS=3
            else
            STATUS=0
        fi
        else
        STATUS=3
    fi
}

start()
{
    funcstatus
    start-stop-daemon --start --background --make-pidfile --pidfile $PIDFILE -c $USER -g $GROUP --chdir $DIR --exec $DAEMON -- $DAEMON_OPTS
}


stop()
{
    funcstatus
    if [ $STATUS -eq 0 ]
    then
        echo "Stopping $NAME: "
        start-stop-daemon --stop  --pidfile $PIDFILE --retry 5
        rm -f $PIDFILE
    else
        echo "$NAME is not started"
    fi
}

restart()
{
    echo "restarting"
    stop
    echo "Starting $NAME: "
    start
    echo "done."
}

funcdumpcore(){
    TMPFILE=$(mktemp)
    COREFILE="/tmp/$NAME_$(date +%Y%m%dT%H%M%S).core"
    echo "generate-core-file $COREFILE" > $TMPFILE
    gdb $DAEMON $(cat $PID) -batch --command=$TMPFILE
    rm -f $TMPFILE
}

case "$1" in
  start)
        restart
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  status)
        funcstatus
        if [ $STATUS -eq 0 ]
        then
          echo "$NAME is running"
          else
          echo "$NAME is NOT running"
        fi
        exit $STATUS
        ;;
  dump-core)
        echo "Dump core"
        funcdumpcore
        echo "Done"
        ;;
  *)
        echo "Usage: /etc/init.d/$NAME {start|stop|restart|status|reload}" >&2
        exit 1
        ;;

esac

exit 0
