pipeline {
    agent any
    stages {
        stage('Install requirement to retreive Github artifacts') {
            steps {
                sh '''
                    pip install -r scripts/requirements.txt
                '''
            }
        }
        stage('packages name') {
            steps {
                script {
                    if (env.PLATFORM == 'dev_debian8') {
                        env.NAVITIA_DEBIAN_PACKAGES = "navitia-debian8-packages.zip"
                    } else if (env.PLATFORM == 'dev_debian10') {
                        env.NAVITIA_DEBIAN_PACKAGES = "navitia-debian10-packages.zip"
                    } else if (env.PLATFORM == 'artemis_debian8') {
                        env.NAVITIA_DEBIAN_PACKAGES = "navitia-debian8-packages.zip"
                    } else {
                        echo 'selected platform not available'
                    }
                    echo "With ${PLATFORM}, ${navitia_packages_type} is selected"
                }
            }
        }
        stage('process navitia debian packages') {
            steps {
                withCredentials([string(credentialsId: 'jenkins-core-github-access-token', variable: 'GITHUB_TOKEN')]) {
                        sh '''
                            echo "remove old artifacts from" ${navitia_packages_type}
                            python2.7 scripts/retreive_debian_packages_from_github.py -r ${navitia_packages_type}
                            echo "retreive debian packages for navitia"
                            python2.7 scripts/retreive_debian_packages_from_github.py -u jenkins-kisio-core -t $GITHUB_TOKEN -w "Build Navitia Packages For Dev Multi Distributions" -a ${navitia_packages_type} -o "."
                            echo "unzip" ${navitia_packages_type}
                            python2.7 scripts/retreive_debian_packages_from_github.py -z ${navitia_packages_type}
                        '''
                }
            }
        }
        stage('Retreive deployment configuration') {
            steps {
                sh 'rm -rf navitia_deployment_conf && mkdir -p navitia_deployment_conf' 
                dir('navitia_deployment_conf') {
                    git credentialsId: 'jenkins-core-ssh', url: 'git@github.com:CanalTP/navitia_deployment_conf.git'
                }
            }
        }
        stage('Install requirement for fabric deployment') {
            steps {
                sh '''
                    pip install -r requirements.txt --exists-action w
                '''
            }
        }
        stage('Run deployment') {
            steps {
                script {
                    if (env.PLATFORM == 'dev_debian8') {
                        echo 'deploy on dev debian 8 platform'
                        sh '''
                            PYTHONPATH=navitia_deployment_conf/ python -u -m fabric use:dev upgrade_all:check_version=False
                        '''
                    } else if (env.PLATFORM == 'dev_debian10') {
                        echo 'deploy on dev debian 10 platform'
                        echo 'Not implemented yet !!!!!'
                    } else if (env.PLATFORM == 'artemis_debian8') {
                        echo 'deploy on artemis debian 8 platform'
                        sh '''
                            PYTHONPATH=navitia_deployment_conf/ python -u -m fabric use:artemis upgrade_version
                            PYTHONPATH=navitia_deployment_conf/ python -u -m fabric use:artemis update_all_configurations:restart=false
                        '''
                    } else {
                        echo 'selected platform not available'
                    }
                }
            }
        }
    }
    post {
        failure { 
            withCredentials([string(credentialsId: 'navitia_core_team_slack_chan', variable: 'NAVITIA_CORE_TEAM_SLACK_CHAN')]) {
                sh '''
                    curl -X POST -H 'Content-type: application/json' --data '{"text":":warning: Deploy Navitia on Artemis is failed"}' NAVITIA_CORE_TEAM_SLACK_CHAN
                '''
            }
        }
    }
}
