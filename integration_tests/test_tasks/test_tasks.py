# encoding: utf-8

from ..utils import cd, Command

fab_list = [
 'apt_get_update',
 'broadcast_email',
 'check_last_dataset',
 'clean_instances',
 'compare_version_candidate_installed',
 'compute_instance_status',
 'deploy_all_default_synonyms',
 'deploy_from_scratch',
 'enable_all_nodes',
 'exclude',
 'get_packages',
 'include',
 'install_system_python_protobuf',
 'isset_dataset',
 'let',
 'really_run',
 'remove_instance',
 'remove_kraken_vip',
 'restart_all',
 'restart_jormungandr',
 'restart_kraken',
 'restart_tyr',
 'setup',
 'show_version',
 'supervision_downtime',
 'switch_to_first_phase',
 'switch_to_second_phase',
 'switch_to_third_phase',
 'update_all_configurations',
 'update_all_ed_databases_to_alembic',
 'update_all_instances',
 'update_instance',
 'update_tyr_step',
 'upgrade_all',
 'upgrade_all_packages',
 'upgrade_jormungandr',
 'upgrade_kraken',
 'upgrade_tyr',
 'upgrade_version',
 'use',
 'component.db.call_tyr_http_authorization',
 'component.db.check_is_postgresql_user_exist',
 'component.db.create_instance_db',
 'component.db.create_postgresql_database',
 'component.db.create_postgresql_user',
 'component.db.create_privileges_instance_db',
 'component.db.db_has_postgis',
 'component.db.is_postgresql_database_exist',
 'component.db.postgis_initdb',
 'component.db.remove_instance_from_jormun_database',
 'component.db.remove_postgresql_database',
 'component.db.remove_postgresql_user',
 'component.db.set_instance_authorization',
 'component.db.set_tyr_is_free',
 'component.db.setup_db',
 'component.db.start_services',
 'component.jormungandr.check_kraken_jormun_after_deploy',
 'component.jormungandr.deploy_jormungandr_all_instances_conf',
 'component.jormungandr.deploy_jormungandr_instance_conf',
 'component.jormungandr.reload_jormun_safe',
 'component.jormungandr.reload_jormun_safe_all',
 'component.jormungandr.remove_jormungandr_instance',
 'component.jormungandr.setup_jormungandr',
 'component.jormungandr.show_version',
 'component.jormungandr.start_jormungandr_all',
 'component.jormungandr.start_services',
 'component.jormungandr.test_jormungandr',
 'component.jormungandr.update_jormungandr_conf',
 'component.jormungandr.upgrade_ws_packages',
 'component.kraken.check_dead_instances',
 'component.kraken.check_kraken_data_synchronization',
 'component.kraken.create_eng_instance',
 'component.kraken.delete_all_kraken_queues_to_rabbitmq',
 'component.kraken.delete_kraken_queue_to_rabbitmq',
 'component.kraken.get_no_data_instances',
 'component.kraken.is_not_synchronized',
 'component.kraken.purge_data_nav',
 'component.kraken.redeploy_all_krakens',
 'component.kraken.redeploy_kraken',
 'component.kraken.remove_kraken_instance',
 'component.kraken.require_all_krakens_started',
 'component.kraken.require_kraken_started',
 'component.kraken.require_monitor_kraken_started',
 'component.kraken.restart_all_krakens',
 'component.kraken.restart_kraken',
 'component.kraken.restart_kraken_on_host',
 'component.kraken.rollback_instance',
 'component.kraken.set_kraken_binary',
 'component.kraken.setup_kraken',
 'component.kraken.show_version',
 'component.kraken.stop_kraken',
 'component.kraken.swap_all_data_nav',
 'component.kraken.swap_data_nav',
 'component.kraken.test_all_krakens',
 'component.kraken.test_kraken',
 'component.kraken.update_eng_instance_conf',
 'component.kraken.update_init',
 'component.kraken.update_monitor_configuration',
 'component.kraken.upgrade_engine_packages',
 'component.kraken.upgrade_monitor_kraken_packages',
 'component.load_balancer._adc_connection',
 'component.load_balancer.disable_node',
 'component.load_balancer.enable_node',
 'component.tyr.backup_datanav',
 'component.tyr.create_tyr_instance',
 'component.tyr.deploy_default_synonyms',
 'component.tyr.get_instance_id',
 'component.tyr.get_tyr_config',
 'component.tyr.get_tyr_last_done_job_id',
 'component.tyr.get_tyr_last_pt_data_set',
 'component.tyr.launch_rebinarization',
 'component.tyr.launch_rebinarization_upgrade',
 'component.tyr.normalize_data_files',
 'component.tyr.remove_at_instance',
 'component.tyr.remove_ed_instance',
 'component.tyr.remove_tyr_instance',
 'component.tyr.restart_tyr_beat',
 'component.tyr.restart_tyr_worker',
 'component.tyr.rollback_datanav',
 'component.tyr.setup_tyr',
 'component.tyr.setup_tyr_master',
 'component.tyr.start_services',
 'component.tyr.start_tyr_beat',
 'component.tyr.start_tyr_worker',
 'component.tyr.stop_tyr_beat',
 'component.tyr.stop_tyr_worker',
 'component.tyr.supervision_downtime',
 'component.tyr.test_tyr_backup_file_presence',
 'component.tyr.tyr_beat_status',
 'component.tyr.update_cities_conf',
 'component.tyr.update_ed_db',
 'component.tyr.update_init',
 'component.tyr.update_tyr_config_file',
 'component.tyr.update_tyr_confs',
 'component.tyr.update_tyr_instance_conf',
 'component.tyr.upgrade_cities_db',
 'component.tyr.upgrade_db_tyr',
 'component.tyr.upgrade_ed_packages',
 'component.tyr.upgrade_tyr_packages',
 'custom_tasks.apt_get_update',
 'custom_tasks.deploy_all_default_synonyms',
 'custom_tasks.get_packages',
 'custom_tasks.install_system_python_protobuf',
 'custom_tasks.update_all_ed_databases_to_alembic',
 'prod_tasks.disable_nodes',
 'prod_tasks.enable_all_nodes',
 'prod_tasks.enable_nodes',
 'prod_tasks.remove_kraken_vip',
 'prod_tasks.restart_jormungandr',
 'prod_tasks.switch_to_first_phase',
 'prod_tasks.switch_to_second_phase',
 'prod_tasks.switch_to_third_phase',
 'tasks._adc_connection',
 'tasks.broadcast_email',
 'tasks.check_last_dataset',
 'tasks.clean_instances',
 'tasks.compare_version_candidate_installed',
 'tasks.compute_instance_status',
 'tasks.deploy_from_scratch',
 'tasks.enable_all_nodes',
 'tasks.isset_dataset',
 'tasks.remove_instance',
 'tasks.remove_kraken_vip',
 'tasks.restart_all',
 'tasks.restart_jormungandr',
 'tasks.restart_kraken',
 'tasks.restart_tyr',
 'tasks.setup',
 'tasks.show_version',
 'tasks.supervision_downtime',
 'tasks.switch_to_first_phase',
 'tasks.switch_to_second_phase',
 'tasks.switch_to_third_phase',
 'tasks.update_all_configurations',
 'tasks.update_all_instances',
 'tasks.update_instance',
 'tasks.update_tyr_step',
 'tasks.upgrade_all',
 'tasks.upgrade_all_packages',
 'tasks.upgrade_jormungandr',
 'tasks.upgrade_kraken',
 'tasks.upgrade_tyr',
 'tasks.upgrade_version',
 'utils.apt_get_update',
 'utils.compute_instance_status',
 'utils.get_version',
 'utils.login_nagios',
 'utils.show_version',
 'utils.start_puppet',
 'utils.stop_puppet',
 'utils.stop_supervision',
 'utils.supervision_downtime',
 'utils.update_init'
]


def test_fab_list():
    with cd('..'):
        cmd = Command('fab --list')
        assert fab_list == cmd.stdout_column(column=0, start=2)
